name: Release

on:
  push:
    branches:
      - 'release-*'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Typecheck & Build
        run: npm run build

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npm run test:e2e

      - name: Archive dist
        run: |
          # Extract version from branch name (release-v0.1.0 -> v0.1.0)
          VERSION=${GITHUB_REF_NAME#release-}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          # Create zip file directly from dist contents (not nested)
          cd dist
          zip -r ../pxtoolbox-$VERSION.zip .
          cd ..

      # For GitHub Pages
      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      # For Release assets
      - name: Upload build artifact (zip)
        uses: actions/upload-artifact@v4
        with:
          name: release-zip
          path: pxtoolbox-${{ env.VERSION }}.zip

  release:
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: release-zip

      - name: Generate Changelog
        id: changelog
        shell: bash
        run: |
          # Extract version from branch name
          VERSION=${GITHUB_REF_NAME#release-}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          
          # Check if this is the first release
          if [ "$VERSION" = "v0.1.0" ]; then
            echo "## Initial Release" > CHANGELOG.md
            echo "- First release of PX Toolbox" >> CHANGELOG.md
            echo "- Diff Viewer with inline highlights" >> CHANGELOG.md
            echo "- JSON Formatter with validation" >> CHANGELOG.md
            echo "- JWT Decoder with payload hints" >> CHANGELOG.md
            echo "- Base64 Encoder/Decoder" >> CHANGELOG.md
            echo "- URL Encoder/Decoder" >> CHANGELOG.md
            echo "- Comprehensive test coverage (98 unit + 53 E2E tests)" >> CHANGELOG.md
          else
            # For subsequent releases, generate changelog from commits
            echo "## Changes in $VERSION" > CHANGELOG.md
            git log --pretty=format:"- %s" --since="$(git describe --tags --abbrev=0 2>/dev/null || echo '')" >> CHANGELOG.md
          fi

      - name: Generate Release README
        shell: bash
        run: |
          VERSION=${GITHUB_REF_NAME#release-}
          cat > RELEASE_README.md << EOF
          # PX Toolbox $VERSION

          ## 🚀 Quick Start

          1. **Download** the \`pxtoolbox-$VERSION.zip\` file
          2. **Extract** the zip file to your desired location  
          3. **Open** \`index.html\` in your web browser
          4. **Start using** the developer tools immediately!

          ## 📋 What's New in $VERSION

          $(cat CHANGELOG.md | sed -n '/## \['$VERSION'\]/,/## \[/p' | head -n -1)

          ## 🛠️ Available Tools

          - **Diff Viewer**: Compare text files with inline highlights
          - **JSON Formatter**: Format, validate, and edit JSON data  
          - **JWT Decoder**: Decode and inspect JWT tokens
          - **Base64 Encoder/Decoder**: Encode and decode Base64 strings
          - **URL Encoder/Decoder**: Encode and decode URL components

          ## 📋 System Requirements

          - Modern web browser (Chrome, Firefox, Safari, Edge)
          - No server installation required
          - Works offline after initial load

          ## 🔗 Online Version

          For the latest version and updates, visit: https://username.github.io/pxtoolbox

          ## 📝 License

          This project is licensed under the MIT License.
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.changelog.outputs.VERSION }}
          name: Release ${{ steps.changelog.outputs.VERSION }}
          body_path: CHANGELOG.md
          files: |
            pxtoolbox-${{ steps.changelog.outputs.VERSION }}.zip
            RELEASE_README.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
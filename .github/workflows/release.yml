name: Release

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
  workflow_dispatch:

permissions:
  contents: write
  actions: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}

    steps:
      # Checkout with full history (needed for git log/describe)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
          fetch-depth: 0

      # Determine tag for this commit
      - name: Determine tag for this commit
        id: tag
        shell: bash
        run: |
          git fetch --tags --force
          TAG="$(git tag --points-at HEAD | grep -E '^v[0-9]' | head -n1)"
          if [ -z "$TAG" ]; then
            echo "::error::No tag (v*) found pointing at ${{ github.event.workflow_run.head_sha }}"
            exit 1
          fi
          echo "TAG=$TAG" >> "$GITHUB_OUTPUT"

      # Download dist from the successful CI run that triggered this release
      - name: Download dist from CI run
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          name: dist
          path: ./dist

      - name: Ensure dist exists
        run: |
          if [ ! -d dist ] || [ -z "$(ls -A dist)" ]; then
            echo "::error::CI artifact 'dist' not found for run ${{ github.event.workflow_run.id }}"
            exit 1
          fi

      # Create a zip from dist
      - name: Create release zip
        run: |
          cd dist
          zip -r ../pxtoolbox-${{ steps.tag.outputs.TAG }}.zip .
          cd ..

      # Generate changelog from commits between tags
      - name: Generate changelog from commits between tags
        id: changelog
        shell: bash
        run: |
          set -euo pipefail
          CURRENT="${{ steps.tag.outputs.TAG }}"       # e.g. v0.1.2
          # previous tag reachable before CURRENT; falls back to empty on first release
          PREV="$(git describe --tags --abbrev=0 "${CURRENT}^" 2>/dev/null || true)"

          {
            echo "## [$CURRENT] - $(date +%Y-%m-%d)"
            echo
            if [ -z "$PREV" ]; then
              echo "### Commits (initial release)"
              # For initial release, show full history from root
              ROOT="$(git rev-list --max-parents=0 HEAD | tail -1)"
              git log --no-merges --reverse --pretty=format:"- %h %s" "${ROOT}..${CURRENT}"
            else
              echo "### Commits since $PREV"
              git log --no-merges --reverse --pretty=format:"- %h %s" "${PREV}..${CURRENT}"
            fi
            echo
          } > CHANGELOG.md


      # Create GitHub Release and attach assets
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.TAG }}
          target_commitish: ${{ github.event.workflow_run.head_sha }}
          body_path: CHANGELOG.md
          files: pxtoolbox-${{ steps.tag.outputs.TAG }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}